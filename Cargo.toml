[workspace]
default-members = [".", "rpc", "client"]
members = [".", "rpc", "client"]
exclude = []

[workspace.package]
version = "0.12.0-alpha.1"
authors = ["Dr Maxim Orlovsky <orlovsky@lnp-bp.org>"]
keywords = ["bitcoin", "lightning-network", "lnp-bp", "smart-contracts", "rgb"]
categories = ["cryptography::cryptocurrencies", "network-programming"]
edition = "2024"
rust-version = "1.85.0"
license = "Apache-2.0"

[workspace.dependencies]
amplify = "4.9.0"
strict_encoding = "2.9.1"
strict_types = "2.9.0"
sonic-api = "0.12.0-rc.2"
bp-std = "0.12.0-rc.2"
bp-rpc = "0.12.0-alpha.1"
bp-client = "0.12.0-alpha.1"
rgb-std = "0.12.0-rc.2"
rgb-runtime = "0.12.0-rc.2"
rgb-persist-fs = "0.12.0-rc.2"

io-reactor = "0.6.0"
cyphernet = { version = "0.5.2", features = ["tor", "dns", "ed25519", "p2p-ed25519"] }
microservices = { version = "0.12.0" }
netservices = { version = "0.12.0-beta.1", features = ["eidolon", "reactor"] }
crossbeam-channel = "0.5.15"
native_db = "0.8.2"
native_model = "0.4.20"

serde = { version = "1", features = ["derive"] }
serde_yaml = "0.9.34"
toml = "0.9.2"
ciborium = "0.2.2"

clap = { version = "4.4.8", features = ["derive", "env"] }
clap_complete = "4.5.7"
log = { version = "0.4" }
loglevel = { version = "0.2.0" }
shellexpand = { version = "3.1.0" }

[package]
name = "rgb-node"
description = "RGB Node: sovereign smart contracts backend"
version.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
readme = "README.md"
build = "build.rs"
exclude = [".github", "Dockerfile", ".dockerignore", "contrib", "shell"]

[lib]
name = "rgbnode"

[[bin]]
name = "rgbd"
required-features = ["server"]

[dependencies]
amplify.workspace = true
strict_types.workspace = true
bp-std = { workspace = true, features = ["serde"] }
rgb-std = { workspace = true, features = ["binfile", "serde"] }
rgb-persist-fs.workspace = true
rgb-runtime.workspace = true
rgb-rpc = { version = "0.12.0-alpha.1", path = "rpc" }
io-reactor.workspace = true
microservices = { workspace = true, features = ["log"] }
netservices = { workspace = true, features = ["log"] }
crossbeam-channel.workspace = true
native_db.workspace = true
native_model.workspace = true
async-channel = { version = "2.3.1", optional = true }
serde.workspace = true
toml = { workspace = true, optional = true }
log.workspace = true
loglevel.workspace = true
clap = { workspace = true, optional = true }
shellexpand = { workspace = true, optional = true }

[build-dependencies]
amplify.workspace = true
bp-std.workspace = true
rgb-rpc = { version = "0.12.0-alpha.1", path = "rpc" }
serde.workspace = true
toml.workspace = true
clap.workspace = true
clap_complete.workspace = true
log.workspace = true
shellexpand.workspace = true

[features]
default = []
all = ["server"]

# Server is a standalone application that runs daemons.
# Required for all apps that can be launched from a command-line shell as binaries
# (i.e., both servers and cli)
server = ["dep:clap", "dep:shellexpand", "dep:toml"]
embedded = ["async-channel"]

[package.metadata.configure_me]
spec = "config_spec.toml"

[patch.crates-io]
io-reactor = { git = "https://github.com/rust-amplify/io-reactor", branch = "v0.6" }
cyphergraphy = { git = "https://github.com/cyphernet-labs/cyphernet.rs", branch = "master" }
cypheraddr = { git = "https://github.com/cyphernet-labs/cyphernet.rs", branch = "master" }
microservices = { git = "https://github.com/cyphernet-labs/microservices.rs", branch = "master" }
netservices = { git = "https://github.com/cyphernet-labs/netservices.rs", branch = "develop" }

bp-consensus = { git = "https://github.com/BP-WG/bp-core" }
bp-core = { git = "https://github.com/BP-WG/bp-core" }
bp-invoice = { git = "https://github.com/BP-WG/bp-std", branch = "feat/descriptors" }
bp-derive = { git = "https://github.com/BP-WG/bp-std", branch = "feat/descriptors" }
descriptors = { git = "https://github.com/BP-WG/bp-std", branch = "feat/descriptors" }
psbt = { git = "https://github.com/BP-WG/bp-std", branch = "feat/descriptors" }
bp-std = { git = "https://github.com/BP-WG/bp-std", branch = "feat/descriptors" }
rgb-std = { git = "https://github.com/RGB-WG/rgb-std", branch = "node" }
rgb-persist-fs = { git = "https://github.com/RGB-WG/rgb-std", branch = "node" }
rgb-psbt = { git = "https://github.com/RGB-WG/rgb", branch = "node" }
rgb-runtime = { git = "https://github.com/RGB-WG/rgb", branch = "node" }

#bp-electrum = { git = "https://github.com/BP-WG/bp-electrum-client", branch = "master" }
#bp-esplora = { git = "https://github.com/BP-WG/bp-esplora-client", branch = "master" }
#bp-client = { git = "https://github.com/BP-WG/bp-node" }
bp-rpc = { git = "https://github.com/BP-WG/bp-node" }
